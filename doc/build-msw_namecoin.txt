most of this taken from: https://bitcointalk.org/index.php?topic=5851.msg86700#msg86700
thanks Matt :]

INSTALL
MinGW Automated Installer
http://sourceforge.net/projects/mingw/files/Automated%20MinGW%20Installer/mingw-get-inst/mingw-get-inst-20110316/mingw-get-inst-20110316.exe/download.
Install with the C++ and MSYS options checked.

Activestate Perl (for building openssl)
http://www.activestate.com/activeperl/downloads
You don't need anything except ActivePerl and Perl, none of the other fancy crap.  You do want to add Perl to your PATH (its an option in the installer).


DOWNLOAD
#WxWidgets 2.9.1: http://sourceforge.net/projects/wxwindows/files/2.9.1/wxWidgets-2.9.1.zip/download.  Unzip to C:\wxWidgets-2.9.1-mgw
Instead of c:\ you can also use a directory to put everything (including the namecoin dir)

OpenSSL 1.0.0j: http://www.openssl.org/source/openssl-1.0.0j.tar.gz
Untar to C:\openssl-1.0.0j-mgw
(yes bitcoin is designed to build with 1.0.0c, but might as well use the latest version since it works right?)
untar using the tar binary which is included in MinGW using cd \c\ && tar xvvf \c\Users\Matt\Downloads\openssl-1.0.0j.tar.gz && mv openssl-1.0.0j openssl-1.0.0j-mgw in the msys shell
otherwise you will have to do this: http://stackoverflow.com/questions/7256087/error-compiling-openssl-with-mingw-msys/8376364#8376364
Note the subtle differences in versions/paths 1.0.0 vs 1.0.1 and 1.0.1c vs 1.0.1d - what a pita.

Berkeley DB 4.7.25 NC: http://download.oracle.com/berkeley-db/db-4.7.25.NC.zip.  Unzip to C:\db-4.7.25.NC-mgw
Boost 1.43.0: http://sourceforge.net/projects/boost/files/boost/1.43.0/boost_1_43_0.zip/download.  Unzip to C:\boost-1.43.0-mgw
Boost Jam: http://sourceforge.net/projects/boost/files/boost-jam/3.1.18/boost-jam-3.1.18-1-ntx86.zip/download.  Unzip wherever you like, I used C:\bjam
miniUPnPc binary http://miniupnp.tuxfamily.org/files/download.php?file=upnpc-exe-win32-20110215.zip.  Unzip to C:\upnpc-exe-win32-20110215
miniUPnPc source http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.5.20110215.tar.gz.  Untar to C:\upnpc-exe-win32-20110215\miniupnpc (you only need *.h, but the others won't hurt) untar with cd \c\upnpc-exe-win32-20110215 && tar xvvf \c\Users\Matt\Downloads\miniupnpc-1.5.20110215.tar.gz && mv miniupnpc-1.5.20110215 miniupnpc
Matt: Note that the reason for using the binary miniupnpc release is that I was unable to get it to build on my system.

Add C:\MinGW\bin to your PATH environment variable (Google is your friend as it depends on your Windows Version).
or use a path like this "\Program Files\MinGW\bin\mingw32-make.exe"   (Tab is your friend.)

BUILD
In the DOS Shell:
#wxWidgets:
#cd \wxWidgets-2.9.1-mgw\build\msw
#mingw32-make -f makefile.gcc

Boost:
cd \boost-1.43.0-mgw
\bjam\bjam.exe toolset=gcc --build-type=complete stage

In the msys Shell (MinGW shell in your start folder or C:\MinGW\msys\1.0\msys.bat, might require a reboot after installation):
OpenSSL:
cd /c/openssl-1.0.0c-mgw
./config
make
perl util/mkdef.pl 32 libeay enable-static-engine > libeay32.def
dllwrap --dllname libeay32.dll --output-lib libeay32.a --def libeay32.def libcrypto.a -lws2_32 -lgdi32
Copy the libeay32.dll file to the folder where you are building/running bitcoin.

In the msys Shell :
Berkeley DB:
cd /c/db-4.7.25.NC-mgw/build_unix
sh ../dist/configure --enable-mingw --enable-cxx
make

In the msys Shell:
namecoind.exe
get the latest linux version from here: https://dot-bit.org/Main_Page

In the msys shell, cd to the unzipped location and

make -f makefile.mingw

If you need to alter the makefile be careful - make is a whitespace bitch (beginning/end of line)  and will often give you completely worthless error messages.

Run with namecoind.exe
make sure you have the libeay32.dll in the same folder
copy from c:\program files\mingw\bin\ libstdc++-6.dll and libgcc_s_dw2-1.dll